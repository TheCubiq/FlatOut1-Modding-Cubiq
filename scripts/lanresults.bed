--///////////////////////////////////////////////////////////////////////////
--// LANResults.bed
--///////////////////////////////////////////////////////////////////////////
--// Copyright (c) 2004 Bugbear Entertainment ltd. 
--// All Rights Reserved.
--// 
--// Created on 4.10.2004 12:03:43
--// 
--// Authors: Fred Sundvik (fred.sundvik@bugbear.fi)
--///////////////////////////////////////////////////////////////////////////

local Layout=
{
	ListPos=POS(0, 107),
	ListWidth=245,
	ListRowHeight=24,
	ListRowPadding=0,
	ListFont=font10(),
	ListFontColor={255, 255, 255, 255},
	ListBackgroundColor={0, 0, 0, 127},
	
	MatchNrPos=POS(3, 3),
	MatchNrWidth=30,
	MatchNrFont=font10(),
	MatchNrFontColor={255, 200, 0, 255},
	
	MatchNamePos=POS(3, 3),
	MatchNameWidth=215,

	PlayersPos=POS(153, 3),
	PlayersWidth=50,
	
	InfoBoxPos=POS(248, 65),
	InfoBoxSize=SIZE(274, 285),
	
	
	GameTitlePos=POS(3, 75),
	PlayersTitlePos=POS(150, 75),
	TitleSize=SIZE(100, 16),
	TitleFont=font10(),
	TitleFontColor={255, 200, 0, 255},
}


local State=nil
local NextRefresh=0


local function JoinSelectedSession()
	local sessionNum=wm.GetWindow("sessionlist"):GetSelectedRow()
	if sessionNum>=1 and sessionNum<=SessionList:GetNumSessions() then
		Session:Reset()
		GameFlow.SetGameMode("JOIN")
		ShowThinkingWindow()
		SessionList:SetSessionNum(sessionNum)
		--KLUDGE: Only one user on port 1
		Session:AddLocalPlayer(nil, 1)
		local player=Session:GetLocalPlayer(1)
		player:SetName(PlayerProfile:GetName())
		player:SetReady(false)	
		player:GenerateUserId()
		SessionList:JoinSession()				
		State="JOINING"
	end
end

local function RefreshSessionList()
	Network:StopSystemLink()
	Network:StartSystemLink()
	SessionList:Refresh()
	ShowThinkingWindow()
	State="SEARCHING"
end


menu_lan_results={
	init_function = function()
		Network:StartSystemLink()
		windows_reset()
		GameFlow.SetGameMode("JOIN")
		StandardUpperBalk()
		StandardLowerBalk()
		--XBoxLiveLowerBalk(LINKRESULTS_JOIN, LINKRESULTS_BACK, LINKRESULTS_REFRESH)
		GUI:LoadBackground("data/menu/bg/game_background.tga")
		
		
		local listboxParams={
		ListBoxTemplate={Name="sessionlist", ShowBorders=FALSE},
		Left=Layout.ListPos[1],
		Top=Layout.ListPos[2],
		LeftPadding=0,
		RightPadding=0,
		TopPadding=0,
		BottomPadding=0,
		RowWidth=Layout.ListWidth,
		RowHeight=Layout.ListRowHeight,
		RowPadding=Layout.ListRowPadding,
		RowTemplate={Font=Layout.ListFont, DrawBackgroundColor=TRUE, TitleCentering=TITLE_CENTER_NONE},
		RowTemplateType="Button",
		RowTemplateCust=function(Row, RowNr)
			Row:SetColor({0, 0, 0, 0})
			Row:SetActiveColor(Layout.ListBackgroundColor)
			Row:SetInactiveColor({0, 0, 0, 0})
		end,
		NumRows=9,
		Coloumns={
				[1]={
				Name="matchnr", -- _row# is added
				ColoumnTemplate={Position=Layout.MatchNrPos, Font=Layout.MatchNrFont, Size=SIZE(Layout.ListRowHeight,Layout.MatchNrWidth), ShowBorders=FALSE},
				ColoumnTemplateType="StaticText",
				ColoumnTemplateCust=function(Coloumn, RowNr, ColoumnNr)
					Coloumn:SetColor(Layout.MatchNrFontColor)
				end
				},		
				[2]={
				Name="matchname", -- _row# is added
				ColoumnTemplate={Position=Layout.MatchNamePos, Size=SIZE(Layout.ListRowHeight,Layout.MatchNameWidth), Font=Layout.ListFont, DrawBackgroundColor=FALSE, TitleCentering=TITLE_CENTER_NONE},
				ColoumnTemplateType="StaticText",
				ColoumnTemplateCust=function(Coloumn, RowNr, ColoumnNr)
					Coloumn:SetColor(Layout.ListFontColor)
				end
				},		
				[3]={
				Name="players", -- _row# is added
				ColoumnTemplate={Position=Layout.PlayersPos, Size=SIZE(Layout.ListRowHeight,Layout.PlayersWidth), Font=Layout.ListFont, DrawBackgroundColor=FALSE, TitleCentering=TITLE_CENTER_NONE},
				ColoumnTemplateType="StaticText",
				ColoumnTemplateCust=function(Coloumn, RowNr, ColoumnNr)
					Coloumn:SetColor(Layout.ListFontColor)
				end
				},
			}
		}
		local list=addparent(CreateMultiColoumnListBox(listboxParams))
		list.onNeedData=function(Self, RowObject, RowNr, ControlRowNr)
			local matchnr=wm.GetWindow(string.format("matchnr_row%i", ControlRowNr))
			local matchname=wm.GetWindow(string.format("matchname_row%i", ControlRowNr))
			local players=wm.GetWindow(string.format("players_row%i", ControlRowNr))
			if RowNr <=SessionList:GetNumSessions() then
				SessionList:SetSessionNum(RowNr)
				local sessionInfo=SessionList:GetSessionInfo()
				--matchnr:SetTitle(ConvertToWString(string.format("%02i", RowNr)))
				matchname:SetTitle(sessionInfo.SessionName)
				local playersTitle=string.format("%i/%i", sessionInfo.FilledPublicSlots+sessionInfo.FilledPrivateSlots, sessionInfo.MaxPublicSlots+sessionInfo.MaxPrivateSlots)
				playersTitle=ConvertToWString(playersTitle)
				players:SetTitle(playersTitle)
			end
		end
		
		list:SetNumRows(0)
		
		list.onSelectedRowChanged=function(Self, RowNr)
			RefreshGameInfoBox()
		end
		
		
		
		local win=addparent(StaticText{Position=MakeSafePos(Layout.GameTitlePos), Size=Layout.TitleSize, Font=Layout.TitleFont, ShowBorders=FALSE})
		win:SetColor(Layout.TitleFontColor)
		win:SetTitle(LINKRESULTS_GAME)

		local win=addparent(StaticText{Position=MakeSafePos(Layout.PlayersTitlePos), Size=Layout.TitleSize, Font=Layout.TitleFont, ShowBorders=FALSE})
		win:SetColor(Layout.TitleFontColor)
		win:SetTitle(LINKRESULTS_PLAYERS)
		
		CreateGameInfoBox(Layout.InfoBoxPos, Layout.InfoBoxSize, true, false, true)
		
		--local handler=addparent(InputHandler{Name="inputhandler"})
		--handler.onKeyPressed=function(Self, Character, VirtualKey, ScanCode)
		--	if VirtualKey==KeyCodes["BUTTON_START"] then
		--		JoinSelectedSession()
		--	elseif VirtualKey==KeyCodes["BUTTON_SELECT"] then
		--		menu_lan_results.options.back_action()
		--	elseif VirtualKey==KeyCodes["BUTTON_X"] and State=="DISPLAYING" then
		--		Network:StopSystemLink()
		--		Network:StartSystemLink()
		--		SessionList:Refresh()
		--		ShowThinkingWindow()
		--		State="SEARCHING"
		--	elseif VirtualKey==KeyCodes["BUTTON_UP"] then
		--		list:MovePrev()
		--	elseif VirtualKey==KeyCodes["BUTTON_DOWN"] then
		--		list:MoveNext()
		--	elseif VirtualKey==KeyCodes["BUTTON_LEFT"] then
		--		PrevInfoPage()
		--	elseif VirtualKey==KeyCodes["BUTTON_RIGHT"] then
		--		NextInfoPage()
		--	end
		--end
		--handler:SetFocus()
			
		activateparents()
		SessionList:Refresh()
		ShowThinkingWindow()
		State="SEARCHING"
	end,
	
	deinit_function = function()
		--deactivateparents()
		windows_reset()
	end,
	
	update_function = function(time)
		if CheckLanErrors() then
			return
		end
		if State=="SEARCHING" and SessionList:IsRefreshCompleted() then
			NextRefresh=time+3
			HideThinkingWindow()
			if SessionList:GetNumSessions()==0 then
				State="ERROR"
				wm.GetWindow("sessionlist"):SetNumRows(0)
				--wm.GetWindow("inputhandler"):SetFocus()
				Menu:EnableButtons()
				RefreshGameInfoBox()
				ShowMessageBox(SAFEPOS(154, 70),
							LINKRESULTS_NOGAMES,
							LINKRESULTS_SEARCH_AGAIN,
							function()
								Network:StopSystemLink()
								Network:StartSystemLink()
								SessionList:Refresh()
								ShowThinkingWindow()
								State="SEARCHING"
							end,
							LINKRESULTS_BACK,
							menu_lan_results.options.back_action
							)
			else
				State="DISPLAYING"
				wm.GetWindow("sessionlist"):SetNumRows(SessionList:GetNumSessions())
				--wm.GetWindow("inputhandler"):SetFocus()
				Menu:EnableButtons()
				RefreshGameInfoBox()
			end

		elseif State=="JOINING" then
			if Session:GetProgress()=="FAILED" then
				HideThinkingWindow()
				ShowMessageBox(SAFEPOS(154, 70),
							LINKRESULTS_NOTJOIN,
							LINKRESULTS_TRY,
							function()JoinSelectedSession()end,
							LINKRESULTS_ANOTHER,
							function()State="DISPLAYING"end
							)
				State="ERROR"
			elseif Session:GetProgress()=="SUCCESS" then
				HideThinkingWindow()
				ShowLanLobby()
			end
		end
		--elseif State=="DISPLAYING" and time>NextRefresh then
		--	SessionList:Refresh()
		--	ShowThinkingWindow()
		--	State="SEARCHING"
		--end
	end,
	
	up_function=function()
		wm.GetWindow("sessionlist"):MovePrev()
	end,
	
	down_function=function()
		wm.GetWindow("sessionlist"):MoveNext()
	end,

	options = {
	
		title = LINKRESULTS_LIST,
		background = noimage(),
		orientation = MENU_HORIZONTAL,
		position = { 256,400 },
		padding = { 60,0 },
		button  = {
			image = image("button.tga"),
		},
		
		back_action=function()
			Network:StopSystemLink()
			EnterMenu("menu_multiplayer_modeselect")
		end,
	},
	
	
	items = {
				{LINKRESULTS_JOIN, noimage(), JoinSelectedSession},
				{LINKRESULTS_REFRESH, noimage(), RefreshSessionList},
			},
}